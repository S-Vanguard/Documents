本次的任务是一个星球大战信息的查询网站。我在本次开发中的任务是确定API和后端登录相关的内容。
# API设计
这次我们使用Swagger来编写我们的API，并使用Swagger的代码生成器生成了我们的后端代码。在使用过程中，我们碰到了很多问题：
## API编写过程太繁琐
不可否认Swagger UI提供了一个很好的API查看界面，但同时Swagger的编写实在麻烦。本来API就多，每个API还要在里面写上输出样例。这样子整个API文档写下来已经超过一千行了。无论查看还是修改都非常麻烦
## 代码生成器对OpenAPI 3.0支持不完善
Swagger只能为使用Swagger 2.0的API文档生成Go服务端代码。我们一开始花了很多时间编写好的OpenAPI3.0代码竟然无法使用！无奈的我们只好重新去学习Swagger 2.0的语法，把文档修改为2.0版本，这样才顺利生成代码。  
希望社区尽快进行相关的开发，推动API编写从2.0到3.0的推进
## 生成的代码结构过于扁平化
我们一个希望，是同一类的API将会被放在同一个代码文件夹下，比如，关于电影查询的API（```/films```前缀）放在一起，关于用户查询的API（```/user```前缀）放在一起。但Swagger生成的代码把这些代码都放在一起了，需要我们自己手动调整。当然这只是白玉微瑕，但如果能实现，将是更酷的一个功能。

# 后端登录编写
这个事实上是一个很简单的任务（与编写API比起来），也没有什么复杂的逻辑，只需要按正常的输入输出，正确性检测等等内容完成，就OK了。Session和Cookie这一块花了一点点工夫？其他的内容还是很简单的。
